/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/. */

<%- partial('jquery.1.7.1.min.js.ejs') %> 

//TODO: Make the jquery non-conflicting with other jQueries too.
// jQuery.noConflict();

var TOWTRUCK_BASE_URL = "<%= baseUrl%>";

var TowTruck = {
  bundle: {
    root: null,
    resources: {}
  },
  pendingResources: [],
  pathContext: function(){
    var url = document.location.href.split("/");
    url[url.length - 1] = '';
    return url.join("/");
  }(),
  ui: function(){
    return jQuery("<%- partial('bookmarklet.html.ejs').replace(/\n/g,' ').replace(/\"/g, "\\\"") %>"); //" This is for syntax highlighting...
  },
  finalizeResource: function(absoluteOrRelativePath, contentType, data){
    this.pendingResources.splice(TowTruck.pendingResources.indexOf(absoluteOrRelativePath), 1);
    this.bundle.resources[absoluteOrRelativePath] = {'data': data, 'content-type': contentType};
    if (this.pendingResources.length == 0){
      this.postBundle();
    }
  },
  getResource: function(absoluteOrRelativePath, contentType){
    
    if (typeof(this.bundle.resources[absoluteOrRelativePath]) != 'undefined' || this.pendingResources.indexOf(absoluteOrRelativePath) > 0)
      return;
    
    
    //This way we know if a resource hasn't been downloaded successfully by the client.
    TowTruck.pendingResources.push(absoluteOrRelativePath);
    
    var path = absoluteOrRelativePath;
    
    if (!absoluteOrRelativePath.match(/^https?\:/)){
      if (absoluteOrRelativePath.indexOf('/') == 0){
        path = this.pathContext.split('/', 3).join('/') + absoluteOrRelativePath;
      }
      else{
        path = [this.pathContext, absoluteOrRelativePath].join('/');
      }
    }
    
    try{
      jQuery.ajax({
        url: path,
        context: this,
        success: function(data, status, req){
          TowTruck.finalizeResource(absoluteOrRelativePath, req.getResponseHeader('Content-Type'), data);
        },
        error: function(){
          TowTruck.finalizeResource(absoluteOrRelativePath, contentType);
        }
      });
    }
    catch(error){
      console.log(error);
    }
  },
  bundleResources: function(){
    this.bundle.root = document.location.href;
    TowTruck.getResource(document.location.href);
    
    jQuery('script').each(function(index){
      if (typeof(jQuery(this).attr('src')) != 'undefined'){
        if (jQuery(this).attr('class') != 'tow-truck'){
          TowTruck.getResource(jQuery(this).attr('src'));
        }
      }
    });
    
    jQuery('link').each(function(index){
      if (typeof(jQuery(this).attr('href')) != 'undefined' && jQuery(this).attr('type') == 'text/css'){
        if (jQuery(this).attr('class') != 'tow-truck'){
          TowTruck.getResource(jQuery(this).attr('href'));
        }
      }
    });
    // Ignoring images for now.
    // jQuery('img').each(function(index){
    //   if (typeof(jQuery(this).attr('src')) != 'undefined'){
    //     if (jQuery(this).attr('class') != 'tow-truck'){
    //       TowTruck.getResource(jQuery(this).attr('src'));
    //     }
    //   }
    // });
  },
  postBundle: function(){
    jQuery.ajax({
      type: 'POST',
      url: TOWTRUCK_BASE_URL + '/bundle',
      data: JSON.stringify(this.bundle),
      success: function(url, status){
        jQuery('#tow_truck_share_url').text(url)
          .prop('href', url);
      },
      contentType: 'text/plain',
      dataType: 'text',
      processData: false
    });
  }
};


function closeAndExit(){
  jQuery('.tow-truck').remove();
}
  
//TODO: This might need to be done smarter (sooner)
//If we've already got things rolling, exit
if (jQuery('.tow-truck').size() == 1){
  jQuery('body').append(TowTruck.ui);

  jQuery('#tow_truck_share_modal')
    .removeAttr('style')
    .find('*').each(function(index){
      jQuery(this).removeAttr('style').addClass('tow-truck');
    });
    
  jQuery('.tow-truck-modal-close').click(closeAndExit);

  var link = document.createElement('link');
  link.className = "tow-truck";
  link.rel = "stylesheet";
  link.type = "text/css";
  link.media = "screen";
  link.href = TOWTRUCK_BASE_URL + '/stylesheets/bookmarklet.css';
  document.head.appendChild(link);
  
  TowTruck.bundleResources();
}
else{
  //console.log('TowTruck already initialized');
}